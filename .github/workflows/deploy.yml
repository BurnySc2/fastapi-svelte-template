name: RunTests

on: [push, pull_request]

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python-version: [3.7, 3.8, 3.9]
                node: [12]

        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node }}

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v1
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Cache poetry packages
              uses: actions/cache@v2
              with:
                  path: ~/.cache/pypoetry/virtualenvs
                  key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

            - name: Cache node packages
              uses: actions/cache@v1
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-${{ matrix.node }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Download previous benchmark data
              uses: actions/cache@v1
              with:
                path: ./cache
                key: ${{ runner.os }}-${{ matrix.python-version }}-benchmark

            - name: Install Python dependencies
              run: |
                  python -m pip install poetry
                  poetry install

            - name: Install npm dependencies
              run: |
                  npm install

            - name: npm run unit tests
              run: |
                  npm run test

            - name: Python test backend
              run: |
                  poetry run pytest test_backend --benchmark-skip

            - name: Python test frontend
              run: |
                  poetry run pytest test_frontend --benchmark-skip --headless

            - name: Python output benchmark results
              if: matrix.python-version == '3.9'
              run: |
                  poetry run pytest --benchmark-json output.json

            - name: Store benchmark result
              if: matrix.python-version == '3.9'
              uses: rhysd/github-action-benchmark@v1
              with:
                tool: 'pytest'
                output-file-path: output.json
                # Where the previous data file is stored
                external-data-json-path: ./cache/benchmark-data.json
                # GitHub API token to make a commit comment
                github-token: ${{ secrets.GITHUB_TOKEN }}
                # Enable alert commit comment
                comment-on-alert: true
                # Workflow will fail when an alert happens
                fail-on-alert: false

            - name: Build frontend
              run: |
                  npm run build

            - name: Publish to Github Pages
              if: github.ref == 'refs/heads/master' && matrix.python-version == '3.9'
              uses: JamesIves/github-pages-deploy-action@releases/v3
              with:
                  ACCESS_TOKEN: ${{ secrets.GITHUB_PAGES_TOKEN }}
                  BASE_BRANCH: master # The branch the action should deploy from.
                  BRANCH: gh-pages # The branch the action should deploy to.
                  FOLDER: public # The folder the action should deploy.
